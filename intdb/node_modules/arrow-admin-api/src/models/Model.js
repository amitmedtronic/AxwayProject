const Ajv = require('ajv');

let validateModel;
class Model {
	static get schema() {
		// Refer to ALLOWED_MODEL_PROS and ALLOWED_FIELD_PROPS in ModelsController.js as well as
		// other props that are used (like name). This is intentionally not validating an entire
		// model, as we throw away some props, rightly or wrongly. If we allow more props in the
		// future, we can add them here.
		return {
			title: 'Model',
			properties: {
				name: {
					type: 'string'
				},
				actions: {
					type: 'array',
					items: {
						type: 'string'
					}
				},
				connector: {
					// This should be oneOf object `{ name: 'connectorname' }`
					// or string 'connectorname', but oneOf is not valid in Swagger 2.0.
				},
				description: {
					type: 'string'
				},
				fields: {
					type: 'object',
					minProperties: 1,
					additionalProperties: {
						type: 'object',
						properties: {
							default: {
							},
							description: {
								type: 'string'
							},
							model: {
								type: 'string'
							},
							name: {
								type: 'string'
							},
							type: {
								type: 'string',
								default: 'string',
								enum: [
									'array',
									'boolean',
									'date',
									'number',
									'object',
									'string'
								]
							},
							required: {
								type: 'boolean',
								default: false
							},
							readonly: {
								type: 'boolean',
								default: false
							},
							validator: {
								type: 'string'
							}
						},
						additionalProperties: true,
						required: [ 'type' ]
					}
				},
				metadata: {
					type: 'object'
				},
				plural: {
					type: 'string'
				},
				singular: {
					type: 'string'
				}
			},
			additionalProperties: true,
			required: [ 'fields', 'name' ]
		};
	}

	static validate(obj) {
		if (!validateModel) {
			// Initialize Ajv model schema validation if we haven't already.
			const ajv = new Ajv();
			validateModel = ajv.compile(Model.schema);
		}
		validateModel(obj);
		return validateModel.errors;
	}
}

module.exports = Model;
