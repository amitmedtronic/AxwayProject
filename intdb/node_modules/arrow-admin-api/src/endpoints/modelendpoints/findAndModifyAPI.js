const { arrowQueryOptions } = require('../../util');

module.exports = ({ operationId, schemaRef, model, encodedModelName }) => {
	return {
		swagger: '2.0',
		info: {
			title: `${model.name}`,
			version: '1.0.0'
		},
		paths: {
			[`/${encodedModelName}/findAndModify`]: {
				put: {
					operationId,
					tags: [
						`${model.name}`
					],
					summary: `Modifies a single ${model.singular}. Although the query may match multiple ${model.plural}, only the first one will be modified.`,
					consumes: [
						'application/json'
					],
					produces: [
						'application/json'
					],
					parameters: [
						{
							name: 'data',
							in: 'body',
							description: 'Find and modify body',
							schema: {
								$ref: schemaRef.model
							}
						},
						{
							name: 'upsert',
							in: 'query',
							type: 'boolean',
							description: 'Set to true to allow the method to create a new model.'
						},
						...arrowQueryOptions
					],
					responses: {
						204: {
							description: 'The find and modify succeeded.'
						},
						400: {
							description: 'Bad request.'
						},
						404: {
							description: 'No results were found.'
						},
						500: {
							description: 'Something went wrong during the request; check out the logs on your server.'
						}
					}
				}
			}
		}
	};
};
