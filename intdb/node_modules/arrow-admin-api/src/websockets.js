const enableWebsockets = require('express-ws');
const chalk = require('chalk');

function formatData(data) {
	return chalk.grey(JSON.stringify(data));
}

/**
 * Add websocket functionality to express.
 * Also bind middleware to handle sending and recieving events, parsing incoming data and logging
 * @param {object} app express app
 */
function addMiddleware (app) {
	// Enable express-ws functionality to listen for websocket connections
	enableWebsockets(app);
	app.ws('*', (ws, req, next) => {
		req.logger.trace('Websocket Connection', formatData({
			url: req.url,
			headers: req.headers
		}));
		ws.sendData = (id, data) => {
			const resp = JSON.stringify({ id, data });
			const log = [ `Websocket Outbound Message [${id}]` ];
			data && log.push(formatData(data));
			if (ws.readyState === 1) {
				req.logger.trace(...log);
				ws.send(resp);
			} else {
				req.logger.trace('client closed!');
			}
		};
		ws.on('message', msg => {
			const message = JSON.parse(msg);
			const log = [ `Websocket Inbound Message [${message.id}]` ];
			message.data && log.push(formatData(message.data));
			req.logger.trace(...log);
			ws.emit(message.id, message.data);
		});
		ws.on('error', e => {
			req.logger.trace('Websocket Error', chalk.red(e));
		});
		ws.on('close', () => {
			req.logger.trace('Websocket Connection Ended');
		});
		next();
	});
}

module.exports = addMiddleware;
