const Parser = require('@axway/jsonpath/lib/parser');

const parser = new Parser();

/**
 * @module axway-flow-graph
 * @typicalname axway-flow-graph
 */

/**
 * Validates a JSONPath selector
 * @param {string} path - JSONPath selector to validate
 * @returns {object} - Validation error only if the selector is not valid
 */
const validateJsonPathSelector = (path) => {
	if (path === null || path === undefined || path === '$') {
		return null;
	}

	if (typeof path !== 'string') {
		return {
			jsonpath: path,
			error: 'Provided JSONPath is not a string'
		};
	}

	// Parser will say that 'foo'is a valid jsonpath. it is valid in this library.
	// '$foo' is invalid for some reason, so we can't test for '$.'.
	// test the beginning of the string first.
	if (!path.startsWith('$')) {
		return {
			jsonpath: path,
			error: 'Provided JSONPath does not start with \'$\''
		};
	}

	try {
		parser.parse(path);
	} catch (ex) {
		return {
			jsonpath: path,
			error: ex.message || ex.toString()
		};
	}
	return null;
};

module.exports = {
	validateJsonPathSelector
};
