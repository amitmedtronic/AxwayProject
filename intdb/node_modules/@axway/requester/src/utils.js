/**
 * Tests if `value` is a readable stream.
 * https://www.npmjs.com/package/is-stream
 * @param {*} value - The value to check.
 * @returns {boolean} True if `value` is a stream.
 */
function isStream(value) {
	return value !== null
		&& value !== undefined
		&& typeof value === 'object'
		&& typeof value.pipe === 'function';
}

/**
 * Tests if `value` is a buffer.
 * @param {*} value - The value to check.
 * @returns {boolean} True if `value` is a buffer;
 */
function isBuffer(value) {
	return Buffer.isBuffer(value);
}

/**
 * Tests if `value` is a plain object. Explicitly `null`, but also excludes
 * objects like `Array`, `Date`, `RegExp`, `Buffer`, etc.
 * @param {*} value - The value to check.
 * @returns {boolean} True if `value` is an object;
 */
function isObject(value) {
	return value !== null
		&& typeof value === 'object'
		&& value.constructor.name === 'Object';
}

/**
 * Tests if `value` is a string.
 * @param {*} value - The value to check.
 * @returns {boolean} True if `value` is a string.
 */
function isString(value) {
	return typeof value === 'string';
}

/**
 * Tests if `value` is a boolean.
 * @param {*} value - The value to check.
 * @returns {boolean} True if `value` is a boolean.
 */
function isBoolean(value) {
	return typeof value === 'boolean';
}

/**
 * Tests if `value` is a finite number.
 * @param {*} value - The value to check.
 * @returns {boolean} True if `value` is a finite number.
 */
function isNumber(value) {
	return Number.isFinite(value);
}

/**
 * Tests if `value` is `null`.
 * @param {*} value - The value to check.
 * @returns {boolean} True if `value` is `null`.
 */
function isNull(value) {
	return value === null;
}

module.exports = {
	isStream,
	isBuffer,
	isObject,
	isString,
	isBoolean,
	isNumber,
	isNull
};
