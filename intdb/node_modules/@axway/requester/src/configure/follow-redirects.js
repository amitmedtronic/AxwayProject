const debug = require('debug');
const http = require('http');
const https = require('https');
const followRedirectsClient = require('follow-redirects');
const { configureAgent } = require('./agent');

const log = debug('api-builder:request');

/**
 * Configures follow-redirects, and returns a client appropriate for use with
 * HTTP/HTTPS, depending on the `httpOptions.protocol` and
 * `httpOptions.followRedirects`. If `followRedirects` is enabled, then
 * additional options will be set on the `httpOptions`, specifically for the
 * `followRedirectsClient`.
 *
 * @param {object} httpOptions - HTTP request options:
 * https://nodejs.org/api/http.html#httprequestoptions-callback
 * @param {object} options - A subset of requester options.
 * @param {boolean} [options.followRedirects = true] - Allows HTTP redirect.
 * @param {number} [options.maxRedirects = 10] - Maximum HTTP redirects.
 * @returns {object} A HTTP client.
 */
function configureRedirect(httpOptions, options) {
	const { protocol, _reqId: reqId } = httpOptions;
	const {
		followRedirects = true,
		maxRedirects = 10
	} = options;
	log(reqId, 'configure follow-redirect', { followRedirects, maxRedirects });

	const isHTTPS = (protocol === 'https:');
	if (![ 'http:', 'https:' ].includes(protocol)) {
		throw new Error(`Invalid protocol: ${protocol}`);
	}
	let client;
	if (followRedirects) {
		log(reqId, 'using client', protocol, 'follow-redirect');
		client = isHTTPS
			? followRedirectsClient.https : followRedirectsClient.http;
		// these options are needed for `follow-redirects`
		httpOptions.followRedirects = true;
		httpOptions.maxRedirects = maxRedirects;

		// a http => https redirect is a normal thing.  when that happens, the
		// agent that is pre-configured as 'http' needs to be switched. this
		// ensures that the agent is updated, regardless of http => https or
		// https => http.
		httpOptions.beforeRedirect = (redirectOptions) => {
			configureAgent(redirectOptions, options);
			// not entirely happy with this, but it is the easiest way to pass
			// information out of this function.
			httpOptions._lastRedirect = redirectOptions.href;
			log(reqId, 'redirect options:');
			log({
				...redirectOptions,
				agent: 'omitted',
				nativeProtocols: 'omitted'
			});
		};
	} else {
		log(reqId, 'using client', protocol, 'no-redirect');
		client = isHTTPS ? https : http;
	}

	return client;
}

module.exports = configureRedirect;
