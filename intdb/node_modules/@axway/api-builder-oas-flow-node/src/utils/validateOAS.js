const Ajv = require('ajv');
const { openapiV3 } = require('openapi-schemas');
const JsonRefs = require('json-refs');

const draft04schema = require('ajv/lib/refs/json-schema-draft-04.json');
const ajv = new Ajv({ schemaId: 'id', meta: false });
ajv.addMetaSchema(draft04schema);
ajv._opts.defaultMeta = draft04schema.id;

const validate = ajv.compile(openapiV3);

function validateOAS3(spec, references) {
	let errors = [];
	for (const item in references) {
		const ref = references[item];
		if (ref.missing) {
			errors.push({
				code: 'UNRESOLVABLE_REFERENCE',
				error: ref.error,
				message: `Reference could not be resolved: ${ref.def.$ref}`,
				path: [ ...JsonRefs.pathFromPtr(item), '$ref' ]
			});
		}
	}

	const valid = validate(spec);
	if (!valid) {
		errors = errors.concat(validate.errors);
	}

	return {
		warnings: [],
		errors
	};
}

module.exports = {
	validateOAS3
};
