const { SDK } = require('@axway/api-builder-sdk');
const path = require('path');
const debug = require('debug');
const chalk = require('chalk');
const addMethods = require('./addMethods');
const exportSchema = require('./exportSchema');

const log = debug('oas-flow-node');

// A note about OAS3 JSON schema.  They are using a *subset* of the
// "Write Draft 00" version of the JSON Schema Specification.  The list of
// drafts can be found here https://json-schema.org/specification-links.html
// The write-draft-00 is "Draft 5" published in April 2017 and appears to
// have been quickly replaced by an 01 version "Draft 6" in October 2017.
// They say draft-05 was intended to be a rough draft of 6.  OAS3 schema is
// effectively draft-06 and does not need to be upgraded (hopefully).
// JSON Schema are now at draft "2019-09" (formerly known as "Draft 8").

/**
 * An OAS2 / OAS3 flow-node plugin generator.
 */
class OASPlugin {
	/**
	 * Generate a flow-node plugin from an OAS2 or OAS3 specification.
	 * @param {OAS} oas - An OAS instance.
	 * @param {string} id - The id of the flow-node, typically the OAS
	 *		spec file-name.
	 * @param {string} scope for generating schemas
	 * @param {string} name - The friendly name of the flow-node.
	 * @param {string} [icon] - The path to the icon for the flow-node
	 *    defaults to oas.title
	 * @param {object} [options] - Generation options.
	 * @param {object} options.config - Plugin overrides from API Builder
	 *		configuration.
	 * @param {object} [options.config.uri={}] - URI overrides.
	 * @param {string} [options.config.uri.protocol] - URI protocol override.
	 * @param {string} [options.config.uri.host] - URI host override.
	 * @param {string|number} [options.config.uri.port] - URI port override.
	 * @param {string} [options.config.uri.basePath] - URI basePath override.
	 * @async
	 * @returns {Object} A flow-node plugin.
	 */
	static generate(oas, id, scope, name, icon, options = {}) {
		const sdk = new SDK({ allowAuthClash: true });
		const flowNode = {
			name,
			icon,
			description: oas.description,
			category: 'connector'
		};
		if (icon) {
			flowNode.icon = icon;
		} else {
			flowNode.icon = path.resolve(__dirname, '../../openapi.svg');
		}
		sdk.add(id, flowNode);

		log('flow-node name:', chalk.green(name));
		addMethods(sdk, oas.operations, options);

		log('flownodes:', chalk.grey(chalk.dim(JSON.stringify(sdk.flownodes))));

		const schema = exportSchema(oas, scope);
		return {
			flownodes: sdk.flownodes,
			schema
		};
	}
}

module.exports = OASPlugin;
