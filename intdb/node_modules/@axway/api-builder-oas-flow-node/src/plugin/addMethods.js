const debug = require('debug');
const chalk = require('chalk');
const addAuthorizationParameters = require('./addAuthorizationParameters');
const addParameters = require('./addParameters');
const addOutputs = require('./addOutputs');
const getAction = require('./getAction');

const log = debug('oas-flow-node');

/**
 * Adds methods to the flow-node given an array of `operations`.
 * @param {SDK} sdk - The current SDK flow-node.
 * @param {OASOperation[]} operations - An array of `OASOperation` objects.
 * @param {object} options - The options.
 */
function addMethods(sdk, operations, options) {
	for (const operation of operations) {
		log('method:', chalk.yellow(operation.name));
		// Note that the method *must* always have a name
		sdk.method(operation.name, { description: operation.description || operation.name });
		addAuthorizationParameters(sdk, operation);
		const parameterMap = addParameters(sdk, operation, options.config);
		addOutputs(sdk, operation.responses);

		// create and bind action method
		const action = getAction(
			operation, parameterMap, options.config);
		sdk.action(action);
	}
}

module.exports = addMethods;
