const addRequestBodyParameter = require('./addRequestBodyParameter');
const addAdvancedHTTPOptions = require('./addAdvancedHTTPOptions');
const addServerParameters = require('./addServerParameters');
const addParameter = require('./addParameter');
const ParameterMap = require('./ParameterMap');

/**
 * Adds all of the operation parameters to the current flow-node method.
 *
 * @param {SDK} sdk - The current SDK flow-node.
 * @param {OASOperation} operation - The operation object.
 * @param {object} config - Plugin config.  See `OASPlugin.generate`
 *		`options.config`.
 *
 * @returns {ParameterMap} - A map of all the parameters for this operation.
 */
function addParameters(sdk, operation, config) {
	const parameterMap = new ParameterMap();

	// Register all parameter names that will be used by the flow-node.
	parameterMap.add([ '_accept', '_content-type', '_decode-response', '_headers' ]);
	parameterMap.add(operation.parameters.map(a => a.name));

	addServerParameters(sdk, operation, parameterMap, config);
	if (operation.requestBody) {
		// Add request body parameters *before* parameters because it may
		// flatten the formData parameter and add a new name to the map.
		addRequestBodyParameter(sdk, operation, parameterMap);
	}
	for (const parameter of operation.parameters) {
		addParameter(sdk, parameter, parameterMap);
	}
	addAdvancedHTTPOptions(sdk, operation, parameterMap);

	return parameterMap;
}

module.exports = addParameters;
