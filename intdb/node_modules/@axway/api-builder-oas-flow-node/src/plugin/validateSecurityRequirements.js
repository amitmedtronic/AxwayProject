const debug = require('debug');
const log = debug('oas-flow-node');

/**
 * Validates authorizations against the security requirements
 * for an operation. Throws if there are requirements and none are met.
 * @param {array} security OAS security requirements array
 * @param {object} authorizations authorization parameters in request
 */
function validate(security, authorizations) {
	log('security requirements', security);
	log('authorizations', authorizations);
	if (!security.length) {
		return;
	}
	// Find at least one security requirement
	const valid = security.some(requirement =>
		// that we have every authorization param for.
		Object.keys(requirement).every(name => name in authorizations)
	);
	if (!valid) {
		let message = 'Invalid combination of authorization parameters provided. Valid combinations are: ';
		const requirements = [];
		for (const requirement of security) {
			requirements.push(`[ ${Object.keys(requirement).join(' and ')} ]`);
		}
		message += requirements.join(' or ');
		log(message);
		throw new Error(message);
	}
}

module.exports = { validate };
