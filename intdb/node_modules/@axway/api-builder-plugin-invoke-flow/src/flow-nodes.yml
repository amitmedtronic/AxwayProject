flow-nodes:
  invoke-flow:
    name: Invoke Flow
    icon: flow-invoke.svg
    description: Invokes flows
    category: core
    methods:
      invokeFlow:
        name: Invoke Flow
        description: Invokes a flow that has an attached `Flow Listener`.
        parameters:
          id:
            name: Flow Listener ID
            description: The ID of a previously configured `Flow Listener`.
            required: true
            initialType: string
            schema:
              type: string
          data:
            name: Data
            description: The data to send to the flow.
            required: false
            schema: {}
        returns:
          name: Next
          description: The flow responded successfully.
          context: $.flowResponse
          schema:
            type: array
        throws:
          name: Error
          description: The flow did not respond successfully.
          context: $.error
          schema: {}
      invokeFlowForEach:
        name: Invoke Flow (for-each)
        description: Invokes a flow that has an attached `Flow Listener` for each item in items, and maps the responses to a new array.
        parameters:
          id:
            name: Flow Listener ID
            description: The ID of a previously configured `Flow Listener`.
            required: true
            initialType: string
            schema:
              type: string
          items:
            name: Items
            description: An array of input items where each item will be passed as request data when invoking the flow.
            required: true
            schema:
              type: array
          concurrency:
            name: Concurrency
            description: By default, items in the Items array are processed concurrently in chunks of 10.  This value can be set to 0 to process all items in Items concurrently, or set to 1 to disable concurrency, or set to a value greater-than 1 to provide a throttling mechanism so as to not overwhelm a backend.
            required: false
            initialType: number
            schema:
              type: number
              default: 10
          breakOnError:
            name: Break on error
            description: If true, this will break out of the flow invocation loop when the first error occurs. When Concurrency is not set to 1, all remaining requests currently being executed will be processed before breaking.
            required: false
            initialType: boolean
            schema:
              default: false
              type: boolean
        returns:
          name: Next
          description: The flow responded successfully.
          context: $.flowResponse
          schema: {}
        throws:
          name: Error
          description: The flow did not respond successfully.
          context: $.error
          schema:
            type: object
            properties:
              message:
                type: string
              successes:
                type: array
              failures:
                type: array
              items:
                type: array
  invoke-flow-response:
      name: Flow Listener Response
      icon: flow-return.svg
      description: Sets the response for the executing `Flow Listener` to be returned to the flow that called `Invoke Flow` flow-node.
      category: core
      methods:
        setResponse:
          name: Set Response
          description: Triggers a flow that has a bound `Flow Listener` flow-trigger.
          parameters:
            data:
              name: Data
              description: The result to be returned to the flow that called `Invoke Flow`.
              required: false
              schema: {}
            isError:
              name: Is Error
              description: Indicates that the response is an error.  This will cause the `Invoke Flow` to trigger the `Error` output with this value.
              required: false
              initialType: boolean
              schema:
                default: false
                type: boolean
          returns:
            name: Next
            description: Response set successfully.
            context: $.response
            schema:
              type: object
              properties:
                error:
                  type: boolean
                data: {}
          throws:
            name: Error
            description: Unexpected error occurred.
            context: $.error
            schema:
              type: object
              properties:
                message:
                  type: string
