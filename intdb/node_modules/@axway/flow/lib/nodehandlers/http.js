const FlowNode = require('../flownode');
const FlowManager = require('../flowmanager');

/**
 * Outputs a value that contains:
 * { status: number, headers: array, body: object|string}
 *
 * Example node:
 *
 */
class HTTP extends FlowNode {
	setresponse(req, cb) {
		const resp = { status: req.params.status };
		if (req.params.headers !== undefined) {
			resp.headers = req.params.headers;
		}
		if (req.params.body !== undefined) {
			resp.body = req.params.body;
		}
		cb.next(null, resp);
	}
}

const httpResponseProperties = {
	status: {
		title: 'Status',
		description: 'The HTTP status code',
		type: 'integer',
		minimum: 100,
		maximum: 599
	},
	headers: {
		title: 'Headers',
		description: 'Key-value pairs of headers',
		type: 'object',
		properties: {},
		additionalProperties: true
	},
	body: {
		title: 'Body',
		description: 'The response payload'
	}
};

function getSpec() {
	return {
		schemaVersion: '1',
		type: FlowManager.formatNodeHandlerUri('axway-flow', 'http'),
		name: 'HTTP',
		icon: 'icon-GG-response',
		category: 'core',
		methods: {
			setresponse: {
				name: 'Set HTTP Response',
				description: 'Set the HTTP response object.',
				parameter: {
					type: 'object',
					properties: httpResponseProperties,
					required: [ 'status' ],
					additionalProperties: false
				},
				outputs: {
					next: {
						name: 'Next',
						context: '$.response',
						schema: {
							type: 'object',
							properties: httpResponseProperties
						}
					}
				}
			}
		}
	};
}

exports = module.exports = {
	handler: HTTP,
	spec: getSpec
};
